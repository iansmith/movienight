// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/seven5/seven5 (interfaces: SessionManager)

package mock

import (
	http "net/http"
	gomock "code.google.com/p/gomock/gomock"
	seven5 "github.com/seven5/seven5"
)

// Mock of SessionManager interface
type MockSessionManager struct {
	ctrl     *gomock.Controller
	recorder *_MockSessionManagerRecorder
}

// Recorder for MockSessionManager (not exported)
type _MockSessionManagerRecorder struct {
	mock *MockSessionManager
}

func NewMockSessionManager(ctrl *gomock.Controller) *MockSessionManager {
	mock := &MockSessionManager{ctrl: ctrl}
	mock.recorder = &_MockSessionManagerRecorder{mock}
	return mock
}

func (_m *MockSessionManager) EXPECT() *_MockSessionManagerRecorder {
	return _m.recorder
}

func (_m *MockSessionManager) Destroy(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Destroy", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSessionManagerRecorder) Destroy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Destroy", arg0)
}

func (_m *MockSessionManager) Find(_param0 string) (seven5.Session, error) {
	ret := _m.ctrl.Call(_m, "Find", _param0)
	ret0, _ := ret[0].(seven5.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSessionManagerRecorder) Find(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Find", arg0)
}

func (_m *MockSessionManager) Generate(_param0 seven5.OauthConnection, _param1 string, _param2 *http.Request, _param3 string, _param4 string) (seven5.Session, error) {
	ret := _m.ctrl.Call(_m, "Generate", _param0, _param1, _param2, _param3, _param4)
	ret0, _ := ret[0].(seven5.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSessionManagerRecorder) Generate(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Generate", arg0, arg1, arg2, arg3, arg4)
}

func (_m *MockSessionManager) Update(_param0 seven5.Session, _param1 interface{}) (seven5.Session, error) {
	ret := _m.ctrl.Call(_m, "Update", _param0, _param1)
	ret0, _ := ret[0].(seven5.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSessionManagerRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1)
}
